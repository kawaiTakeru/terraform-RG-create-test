trigger:
- none

pool:
  name: Default  # ← Self-hosted Agent を指定

steps:
- task: PowerShell@2
  displayName: 'Step 1: Terraform Init'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "📌 Terraform Init 開始"
      terraform init

- task: PowerShell@2
  displayName: 'Step 2: Terraform Plan'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "📋 Terraform Plan 開始"
      terraform plan -out=tfplan

- task: PowerShell@2
  displayName: 'Step 3: Terraform Apply'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "🚀 Terraform Apply 開始"
      terraform apply -auto-approve tfplan

# ✅ 成功時 Slack 通知
- task: PowerShell@2
  displayName: 'Notify Slack (Success)'
  condition: succeeded()
  inputs:
    targetType: 'inline'
    script: |
      $webhookUrl = 'https://hooks.slack.com/services/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'
      $payload = @{ text = "✅ Terraform Apply 成功: `rg-terraform-test-01` が作成されました 🎉" } | ConvertTo-Json
      Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json'

# ❌ 失敗時 Slack 通知
- task: PowerShell@2
  displayName: 'Notify Slack (Failure)'
  condition: failed()
  inputs:
    targetType: 'inline'
    script: |
      $webhookUrl = 'https://hooks.slack.com/services/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'
      $payload = @{ text = "❌ Terraform Apply 失敗: エラーが発生しました ⚠️" } | ConvertTo-Json
      try {
        Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json'
      } catch {
        Write-Host "Slack通知に失敗しました（失敗通知）: $($_.Exception.Message)"
      }
