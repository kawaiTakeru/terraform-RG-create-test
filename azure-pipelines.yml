trigger:
- main

pool:
  name: Default
  demands:
    - agent.name -equals LAPTOP-OEOER8OI  # ご自身のPC名に合わせてあります

jobs:
- job: Job
  displayName: 'Terraform RG作成＋Slack通知'
  steps:

  - checkout: self

  - task: PowerShell@2
    displayName: 'Step 1: Terraform Init'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "📋 Terraform Init 開始"
        terraform init

  - task: PowerShell@2
    displayName: 'Step 2: Terraform Plan'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "📋 Terraform Plan 開始"
        terraform plan

  - task: PowerShell@2
    displayName: 'Step 3: Terraform Apply'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "📋 Terraform Apply 開始"
        terraform apply -auto-approve

  # ✅ 成功時のSlack通知
  - task: PowerShell@2
    displayName: 'Notify Slack (Success)'
    condition: succeeded()
    inputs:
      targetType: 'inline'
      script: |
        $webhookUrl = 'https://hooks.slack.com/services/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'
        $payload = @{
          text = "✅ Terraform Apply 完了: `rg-terraform-test-01` が作成されました 🎉"
        } | ConvertTo-Json -Depth 3
        Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json'

  # ❌ 失敗時のSlack通知
  - task: PowerShell@2
    displayName: 'Notify Slack (Failure)'
    condition: failed()
    inputs:
      targetType: 'inline'
      script: |
        $webhookUrl = 'https://hooks.slack.com/services/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'
        $payload = @{
          text = "❌ Terraform Apply 失敗しました。ログを確認してください。"
        } | ConvertTo-Json -Depth 3
        try {
          Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json'
        } catch {
          Write-Host "Slack通知に失敗しました（失敗通知）: $($_.Exception.Message)"
        }
