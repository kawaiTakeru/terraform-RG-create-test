trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  tfWorkingDir: 'terraform'

steps:
# ----------------------------------------
# 🧹 Step 1: Terraform Init
# ----------------------------------------
- task: PowerShell@2
  displayName: 'Step 1: Terraform Init'
  inputs:
    targetType: 'inline'
    script: |
      cd $(tfWorkingDir)
      terraform init

# ----------------------------------------
# 🧪 Step 2: Terraform Plan
# ----------------------------------------
- task: PowerShell@2
  displayName: 'Step 2: Terraform Plan'
  inputs:
    targetType: 'inline'
    script: |
      cd $(tfWorkingDir)
      terraform plan

# ----------------------------------------
# 🚀 Step 3: Terraform Apply（成功時のみ）
# ----------------------------------------
- task: PowerShell@2
  displayName: 'Step 3: Terraform Apply'
  condition: succeeded()
  inputs:
    targetType: 'inline'
    script: |
      cd $(tfWorkingDir)
      terraform apply -auto-approve

# ----------------------------------------
# ✅ Step 4: Slack通知（成功時）
# ----------------------------------------
- task: PowerShell@2
  displayName: 'Step 4: Notify Slack (Success)'
  condition: succeeded()
  inputs:
    targetType: 'inline'
    script: |
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      $webhookUrl = 'https://hooks.slack.com/services/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'
      $headers = @{
        "User-Agent" = "AzureDevOpsSlackBot/1.0"
      }
      $payload = @{
        text = "✅ Terraform Apply 完了: リソースが作成されました 🎉"
      } | ConvertTo-Json -Compress
      try {
        Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json' -Headers $headers
        Write-Host "Slack通知成功（成功通知）"
      } catch {
        Write-Host "Slack通知に失敗しました（成功通知）: $_"
      }

# ----------------------------------------
# ❌ Step 5: Slack通知（失敗時）
# ----------------------------------------
- task: PowerShell@2
  displayName: 'Step 5: Notify Slack (Failure)'
  condition: failed()
  inputs:
    targetType: 'inline'
    script: |
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      $webhookUrl = 'https://hooks.slack.com/services/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'
      $headers = @{
        "User-Agent" = "AzureDevOpsSlackBot/1.0"
      }
      $payload = @{
        text = "❌ Terraform Apply に失敗しました 💥"
      } | ConvertTo-Json -Compress
      try {
        Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json' -Headers $headers
        Write-Host "Slack通知成功（失敗通知）"
      } catch {
        Write-Host "Slack通知に失敗しました（失敗通知）: $_"
      }
