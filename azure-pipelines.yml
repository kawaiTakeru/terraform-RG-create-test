trigger:
  - none

pool:
  name: Default  # Self-hosted Agent

steps:
# Terraform バージョン確認（変数なしでそのまま）
- task: PowerShell@2
  displayName: 'Check Terraform Version'
  inputs:
    targetType: 'inline'
    script: |
      terraform -version
      Write-Host "※ Terraform Version を手動で確認してください"

# Terraform Init
- task: PowerShell@2
  displayName: 'Step 1: Terraform Init'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "📌 Terraform Init 開始"
      terraform init

# Terraform Plan
- task: PowerShell@2
  displayName: 'Step 2: Terraform Plan'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "📋 Terraform Plan 開始"
      terraform plan -out=tfplan

# Terraform Apply
- task: PowerShell@2
  displayName: 'Step 3: Terraform Apply'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "🚀 Terraform Apply 開始"
      terraform apply -auto-approve tfplan

# Slack通知（Terraform失敗時）
- task: PowerShell@2
  displayName: 'Slack通知（Terraformエラー）'
  condition: failed()
  inputs:
    targetType: 'inline'
    script: |
      $webhookUrl = 'https://hooks.slack.com/services/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'
      $buildId = $env:BUILD_BUILDID
      $pipelineName = $env:BUILD_DEFINITIONNAME
      $projectName = $env:SYSTEM_TEAMPROJECT
      $url = "https://dev.azure.com/$($env:SYSTEM_COLLECTIONURI.TrimEnd('/'))/$projectName/_build/results?buildId=$buildId&view=results"

      $payload = @{
        text = "❌ Terraform Apply に失敗しました\n• パイプライン: $pipelineName\n• ビルドID: $buildId\n• 確認: $url"
      } | ConvertTo-Json -Compress

      $utf8 = [System.Text.Encoding]::UTF8.GetBytes($payload)
      Invoke-RestMethod -Uri $webhookUrl -Method POST -Body $utf8 -ContentType 'application/json; charset=utf-8'
