trigger:
- none

variables:
  TF_VERSION: '1.6.6'

pool:
  name: Default  # Self-hosted Agent

steps:
# Terraform バージョン確認
- task: PowerShell@2
  displayName: 'Check Terraform Version'
  inputs:
    targetType: 'inline'
    script: |
      terraform -version
      Write-Host "※ Terraform Version が ${env:TF_VERSION} であることを確認"

# Terraform Init
- task: PowerShell@2
  displayName: 'Step 1: Terraform Init'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "📌 Terraform Init 開始"
      terraform init

# Terraform Plan
- task: PowerShell@2
  displayName: 'Step 2: Terraform Plan'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "📋 Terraform Plan 開始"
      terraform plan -out=tfplan

# Terraform Apply
- task: PowerShell@2
  displayName: 'Step 3: Terraform Apply'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "🚀 Terraform Apply 開始"
      terraform apply -auto-approve tfplan

# Slack通知（成功）
- task: PowerShell@2
  displayName: 'Notify Slack (Success)'
  condition: succeeded()
  inputs:
    targetType: 'inline'
    script: |
      $webhookUrl = 'https://hooks.slack.com/services/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'
      $payload = @{ text = "✅ Terraform Apply 成功 (Version ${env:TF_VERSION}) 🎉" } | ConvertTo-Json
      Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json'

# Slack通知（失敗）
- task: PowerShell@2
  displayName: 'Notify Slack (Failure)'
  condition: failed()
  inputs:
    targetType: 'inline'
    script: |
      $webhookUrl = 'https://hooks.slack.com/services/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'
      $payload = @{ text = "❌ Terraform Apply 失敗 (Version ${env:TF_VERSION}) ⚠️" } | ConvertTo-Json
      try {
        Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json'
      } catch {
        Write-Host "Slack通知に失敗しました: $($_.Exception.Message)"
      }
